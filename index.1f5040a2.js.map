{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-b498ae7852df7734.js","src/index.js","src/js/render/renderAllCategories.js","src/js/render/renderSupportList.js","src/js/components/support-funds.js","src/js/createSupportList.js","src/js/topBooks.js","node_modules/@parcel/runtime-js/lib/runtime-aa3a2ea5ec1a6e9a.js","src/js/render/renderBookCard.js","src/js/render/renderCategoryTitle.js","src/js/render/renderTopCategories.js","src/js/scrollToTop.js","src/js/categoryBooks.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"5ZPII\\\":\\\"index.1f5040a2.js\\\",\\\"kx99P\\\":\\\"sample.eaf37d8e.png\\\",\\\"9aMz8\\\":\\\"index.a9c24b75.js\\\"}\"));","import './js/components/refs';\nimport './js/mobileMenu';\nimport './js/firebase';\nimport './js/render/renderAllCategories';\nimport './js/createSupportList';\nimport './js/topBooks';\nimport './js/scrollToTop';\nimport './js/components/support-funds';\nimport './js/categoryBooks';\n\n","import { getCategoryList } from '../api/fetchLogic';\nimport { refs } from '../components/refs';\n\nconst renderAllCategories = data => {\n  const categories = data\n    .map(({ list_name }) => {\n      return `<li class=\"categories__item\">${list_name}</li>`;\n    })\n    .join('');\n  return categories;\n};\n\nasync function createAllCategories() {\n  try {\n    const allCategories = await getCategoryList();\n    refs.allCategoriesList.insertAdjacentHTML(\n      'beforeend',\n      renderAllCategories(allCategories)\n    );\n  } catch (error) {\n    console.log(error);\n  }\n}\nwindow.addEventListener('load', createAllCategories);\n\n// import { getCategoryList } from '../api/fetchLogic';\n// import { refs } from '../components/refs';\n\n// function renderAllCategories(data) {}\n\n// async function createAllCategories() {\n//   try {\n//     const allCategories = '';\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n\n// во-первых тебе не нужна переменная с массивом объектов, ты получаешь его через функцию которую я тебе импортировал вверху, это ассинхронная функция\n// во-вторых вот это const ul = document.querySelector('.allCategories__list'); должно быть в файле refs который тоже надо импортировать, уже сделал,\n//обращаешься к этому списку череpз refs.allCategoriesList\n//вверху функция названная renderAllCategories в ней тебе просто надо написать логику как например в файле renderBookCard\n//после в функции createAllCategories в allCategories ты должен записать вызов функции getCategoryList со словом await\n//и после вставить с помощью метода insertAdjacentHTML резульатат\n// ну и потом надо решаить как фунцию вызвать, покликай по примерам в других файлах, вообще эти две функции можно было бы разюбить на два файла но тут уж сам глянь\n","export function renderSupportList(data) {\n  const funds = data\n    .map(({ title, url, img }, idx) => {\n      console.log(img);\n      const image = new URL(`${img}`, import.meta.url);\n      return `<li><a href=\"${url}\">${\n        idx + 1\n      } <img src=\"${image}\" alt=\"${title}\"></a></li>`;\n    })\n    .join('');\n  console.log(funds);\n  return funds;\n}\n","export const funds = [\n  {\n    title: 'Save the Children',\n    url: 'https://www.savethechildren.net/what-we-do/emergencies/ukraine-crisis',\n    img: '../../images/saveTheChildren.png',\n  },\n  {\n    title: 'Project HOPE',\n    url: 'https://www.projecthope.org/country/ukraine/',\n    img: '../../images/projectHope.png',\n  },\n  {\n    title: 'UNITED24',\n    url: 'https://u24.gov.ua/uk',\n    img: '../../images/united24.png',\n  },\n  {\n    title: 'International Medical Corps',\n    url: 'https://internationalmedicalcorps.org/country/ukraine/',\n    img: '../../images/medicalCorps.png',\n  },\n  {\n    title: 'Medicins Sans Frontieres',\n    url: 'https://www.msf.org/ukraine',\n    img: '../../images/msf.png',\n  },\n  {\n    title: 'RAZOM',\n    url: 'https://www.razomforukraine.org/',\n    img: '../../images/razom.png',\n  },\n  {\n    title: 'Action against hunger',\n    url: 'https://www.actionagainsthunger.org/location/europe/ukraine/',\n    img: '../../images/actionAgainst.png',\n  },\n  {\n    title: 'World vision',\n    url: 'https://www.wvi.org/emergencies/ukraine',\n    img: '../../images/worldVision.png',\n  },\n  {\n    title: 'Serhiy Prytula Charity Foundation',\n    url: 'https://prytulafoundation.org/en',\n    img: '../../images/prytula.png',\n  },\n];\n","import { renderSupportList } from './render/renderSupportList';\nimport { refs } from './components/refs';\nimport { funds } from './components/support-funds';\n\nfunction createAllCategories() {\n  const allFunds = renderSupportList(funds);\n  refs.suppList.innerHTML = allFunds;\n}\nwindow.addEventListener('load', createAllCategories);\n","import { getTopBooks } from \"./api/fetchLogic\";\nimport { refs } from \"./components/refs\";\nimport { renderTopCategories} from \"./render/renderTopCategories\";\nimport { renderCategoryTitle } from \"./render/renderCategoryTitle\";\nimport { removeLoading, startLoading } from \"./helpers/spinner\";\nimport { renderError } from \"./render/renderError\";\n\nconst createTopBooks = async () => {\n    startLoading();\n    renderCategoryTitle(`Best sellers books`);\n    try {\n        const books = await getTopBooks();\n        refs.booksHandler.innerHTML = renderTopCategories(books);\n    } catch (e) {\n        refs.booksHandler.innerHTML = renderError(`Something went wrong...`);\n    }\n    removeLoading();\n}\n\nif (refs.booksHandler) {\n    window.addEventListener(\"load\", createTopBooks);\n}","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"kx99P\")).toString();","export const renderBookCard = (data) => {\n    const sample = new URL('../../images/sample.png', import.meta.url);\n    const books = data.map(({ _id, book_image, title, author }) => {\n        return `<li class=\"card\" data-book=\"${_id}\">\n        <div class=\"card__thumb\">\n            <img src=\"${book_image ? book_image : sample}\" loading=\"lazy\" alt=\"${title}\" class=\"card__img\">\n            <div class=\"card__text\">\n                <p class=\"card__text-inner\">quick view</p>\n            </div>\n        </div>\n        <h3 class=\"card__title\">${title}</h3>\n        <h4 class=\"card__author\">${author}</h4>\n    </li>`\n    }).join(\"\");\n    return books;\n}\n","import { refs } from \"../components/refs\";\n\nexport const renderCategoryTitle = (title) => {\n    const arrayOfWords = title.split(\" \");\n    const lastWord = arrayOfWords[arrayOfWords.length - 1];\n    const allExceptLastWord = arrayOfWords.slice(0, -1).join(\" \");\n\n    refs.categoryTitle.innerHTML = `${allExceptLastWord} <span class=\"books__title-last\">${lastWord}</span>`;\n}","import { renderBookCard } from \"./renderBookCard\";\n\nexport const renderTopCategories = (data) => {\n    const categories = data.map(({ list_name, books }) => {\n        return `<div class=\"category\" data-category=\"${list_name}\">\n        <h2 class=\"category__title\">${list_name}</h2>\n        <ul class=\"category__list\">\n            ${renderBookCard(books)}\n        </ul>\n        <button class=\"btn--violet category__btn\" data-category=\"${list_name}\">see more</button>\n        </div>`\n    }).join(\"\");\n    return categories;\n} ","import { refs } from \"./components/refs\";\n\nconst observeTop = (entries) => {\n    entries.forEach(entry => {\n        if (!entry.isIntersecting) {\n            refs.scrollTopBtn.classList.remove('hidden');\n        } else {\n            refs.scrollTopBtn.classList.add('hidden');\n        }\n    });\n} \n\nexport const scrollToTop = () => {\n    window.scroll({\n        top: 0,\n        behavior: 'smooth',\n    });\n}\n\nconst toTopObserver = new IntersectionObserver(observeTop);\n\ntoTopObserver.observe(refs.scrollTopTarget);\nrefs.scrollTopBtn.addEventListener(\"click\", scrollToTop)","import { refs } from \"./components/refs\";\nimport { getBooksOfCertainCategory } from \"./api/fetchLogic\";\nimport { removeLoading, startLoading } from \"./helpers/spinner\";\nimport { renderError } from \"./render/renderError\";\nimport { renderCategoryTitle } from \"./render/renderCategoryTitle\";\nimport { renderBookCard } from \"./render/renderBookCard\";\nimport { scrollToTop } from \"./scrollToTop\";\n\nconst createCategoryBooks = async (event) => {\n    // && li \n    if (event.target.nodeName !== 'BUTTON') {\n        return;\n    }\n    startLoading();\n    const category = event.target.dataset.category;\n    try {\n        const categoryList = await getBooksOfCertainCategory(category);\n        renderCategoryTitle(category);\n        refs.booksHandler.innerHTML = `<ul class=\"books__list\">${renderBookCard(categoryList)}</ul>`;\n        scrollToTop();\n    } catch (e) {\n        refs.booksHandler.innerHTML = renderError(`Something went wrong...`);\n    }\n    removeLoading();\n}\n\nrefs.booksHandler.addEventListener(\"click\", createCategoryBooks)"],"names":["parcelRequire","register","JSON","parse","$2e5nt","$ded7ca2d95b805eb$export$25aed3e18232bba6","data","funds","map","title","url","img","idx","console","log","URL","join","window","addEventListener","async","allCategories","getCategoryList","$fAODQ","refs","allCategoriesList","insertAdjacentHTML","list_name","error","$de48c8c87e143415$export$4a9cb9e0aa63c34a","allFunds","suppList","innerHTML","$62afbf5ea11da203$exports","resolve","import","meta","toString","$a47ea20d57e5ad83$export$7ad7812518320979","sample","_id","book_image","author","$c8907729a4678d7b$export$c2a58a501338b2e1","arrayOfWords","split","lastWord","length","allExceptLastWord","slice","categoryTitle","booksHandler","$43IiB","startLoading","books","getTopBooks","e","$dbSHG","renderError","removeLoading","$c615a1561526cb3b$export$f5d3771428a1f489","scroll","top","behavior","IntersectionObserver","entries","forEach","entry","isIntersecting","scrollTopBtn","classList","add","remove","observe","scrollTopTarget","event","target","nodeName","category","dataset","categoryList","getBooksOfCertainCategory"],"version":3,"file":"index.1f5040a2.js.map"}