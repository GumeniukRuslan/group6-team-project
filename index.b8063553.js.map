{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-bc5129132b2c1136.js","src/index.js","src/js/mobileMenu.js","src/js/render/renderAllCategories.js","src/js/topBooks.js","node_modules/@parcel/runtime-js/lib/runtime-b538721a2078ac72.js","src/js/render/renderBookCard.js","src/js/render/renderCategoryTitle.js","src/js/render/renderTopCategories.js","src/js/scrollToTop.js","src/js/categoryBooks.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"EVgbq\\\":\\\"index.b8063553.js\\\",\\\"6Hg8L\\\":\\\"sample.eaf37d8e.png\\\",\\\"ge42F\\\":\\\"index.80d30e11.js\\\"}\"));","import './js/components/refs';\nimport './js/mobileMenu';\nimport './js/render/renderAllCategories';\nimport './js/topBooks';\nimport './js/scrollToTop';\nimport './js/categoryBooks'","import { refs } from './components/refs';\n\nrefs.burger.addEventListener('click', toggleMenu);\n\nfunction toggleMenu() {\n  if (refs.mobileMenu.classList.contains('showMenu')) {\n    refs.mobileMenu.classList.remove('showMenu');\n\n    refs.burgerCloseIcon.classList.add('hideButton');\n    refs.burgerCloseIcon.classList.remove('showButton');\n\n    refs.burgerMenuIcon.classList.add('showButton');\n    refs.burgerMenuIcon.classList.remove('hideButton');\n\n    document.body.classList.remove('lock');\n  } else {\n    refs.mobileMenu.classList.add('showMenu');\n\n    refs.burgerCloseIcon.classList.add('showButton');\n    refs.burgerCloseIcon.classList.remove('hideButton');\n\n    refs.burgerMenuIcon.classList.add('hideButton');\n    refs.burgerMenuIcon.classList.remove('showButton');\n\n    document.body.classList.add('lock');\n  }\n}\n\nwindow.matchMedia('(min-width: 768px)').addEventListener('change', e => {\n  if (!e.matches) return;\n  refs.mobileMenu.classList.remove('showMenu');\n\n  refs.burgerCloseIcon.classList.add('hideButton');\n  refs.burgerCloseIcon.classList.remove('showButton');\n\n  refs.burgerMenuIcon.classList.add('showButton');\n  refs.burgerMenuIcon.classList.remove('hideButton');\n\n  document.body.classList.remove('lock');\n});\n","import { getCategoryList } from '../api/fetchLogic';\nimport { refs } from '../components/refs';\n\nconst renderAllCategories = data => {\n  const categories = data\n    .map(({ list_name }) => {\n      return `<li class=\"categories__item\">${list_name}</li>`;\n    })\n    .join('');\n  return categories;\n};\n\nasync function createAllCategories() {\n  try {\n    const allCategories = await getCategoryList();\n    refs.allCategoriesList.insertAdjacentHTML(\n      'beforeend',\n      renderAllCategories(allCategories)\n    );\n  } catch (error) {\n    console.log(error);\n  }\n}\nwindow.addEventListener('load', createAllCategories);\n\n// import { getCategoryList } from '../api/fetchLogic';\n// import { refs } from '../components/refs';\n\n// function renderAllCategories(data) {}\n\n// async function createAllCategories() {\n//   try {\n//     const allCategories = '';\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n\n// во-первых тебе не нужна переменная с массивом объектов, ты получаешь его через функцию которую я тебе импортировал вверху, это ассинхронная функция\n// во-вторых вот это const ul = document.querySelector('.allCategories__list'); должно быть в файле refs который тоже надо импортировать, уже сделал,\n//обращаешься к этому списку череpз refs.allCategoriesList\n//вверху функция названная renderAllCategories в ней тебе просто надо написать логику как например в файле renderBookCard\n//после в функции createAllCategories в allCategories ты должен записать вызов функции getCategoryList со словом await\n//и после вставить с помощью метода insertAdjacentHTML резульатат\n// ну и потом надо решаить как фунцию вызвать, покликай по примерам в других файлах, вообще эти две функции можно было бы разюбить на два файла но тут уж сам глянь\n","import { getTopBooks } from \"./api/fetchLogic\";\nimport { refs } from \"./components/refs\";\nimport { renderTopCategories} from \"./render/renderTopCategories\";\nimport { renderCategoryTitle } from \"./render/renderCategoryTitle\";\nimport { removeLoading, startLoading } from \"./helpers/spinner\";\nimport { renderError } from \"./render/renderError\";\n\nconst createTopBooks = async () => {\n    startLoading();\n    renderCategoryTitle(`Best sellers books`);\n    try {\n        const books = await getTopBooks();\n        refs.booksHandler.innerHTML = renderTopCategories(books);\n    } catch (e) {\n        refs.booksHandler.innerHTML = renderError(`Something went wrong...`);\n    }\n    removeLoading();\n}\n\nif (refs.booksHandler) {\n    window.addEventListener(\"load\", createTopBooks);\n}","module.exports = require('./helpers/bundle-url').getBundleURL('EVgbq') + require('./helpers/bundle-manifest').resolve(\"6Hg8L\");","export const renderBookCard = (data) => {\n    const sample = new URL('../../images/sample.png', import.meta.url);\n    const books = data.map(({ _id, book_image, title, author }) => {\n        return `<li class=\"card\" data-book=\"${_id}\">\n        <div class=\"card__thumb\">\n            <img src=\"${book_image ? book_image : sample}\" loading=\"lazy\" alt=\"${title}\" class=\"card__img\">\n            <div class=\"card__text\">\n                <p class=\"card__text-inner\">quick view</p>\n            </div>\n        </div>\n        <h3 class=\"card__title\">${title}</h3>\n        <h4 class=\"card__author\">${author}</h4>\n    </li>`\n    }).join(\"\");\n    return books;\n}\n","import { refs } from \"../components/refs\";\n\nexport const renderCategoryTitle = (title) => {\n    const arrayOfWords = title.split(\" \");\n    const lastWord = arrayOfWords[arrayOfWords.length - 1];\n    const allExceptLastWord = arrayOfWords.slice(0, -1).join(\" \");\n\n    refs.categoryTitle.innerHTML = `${allExceptLastWord} <span class=\"books__title-last\">${lastWord}</span>`;\n}","import { renderBookCard } from \"./renderBookCard\";\n\nexport const renderTopCategories = (data) => {\n    const categories = data.map(({ list_name, books }) => {\n        return `<div class=\"category\" data-category=\"${list_name}\">\n        <h2 class=\"category__title\">${list_name}</h2>\n        <ul class=\"category__list\">\n            ${renderBookCard(books)}\n        </ul>\n        <button class=\"btn--violet category__btn\" data-category=\"${list_name}\">see more</button>\n        </div>`\n    }).join(\"\");\n    return categories;\n} ","import { refs } from \"./components/refs\";\n\nconst observeTop = (entries) => {\n    entries.forEach(entry => {\n        if (!entry.isIntersecting) {\n            refs.scrollTopBtn.classList.remove('hidden');\n        } else {\n            refs.scrollTopBtn.classList.add('hidden');\n        }\n    });\n} \n\nexport const scrollToTop = () => {\n    window.scroll({\n        top: 0,\n        behavior: 'smooth',\n    });\n}\n\nconst toTopObserver = new IntersectionObserver(observeTop);\n\ntoTopObserver.observe(refs.scrollTopTarget);\nrefs.scrollTopBtn.addEventListener(\"click\", scrollToTop)","import { refs } from \"./components/refs\";\nimport { getBooksOfCertainCategory } from \"./api/fetchLogic\";\nimport { removeLoading, startLoading } from \"./helpers/spinner\";\nimport { renderError } from \"./render/renderError\";\nimport { renderCategoryTitle } from \"./render/renderCategoryTitle\";\nimport { renderBookCard } from \"./render/renderBookCard\";\nimport { scrollToTop } from \"./scrollToTop\";\n\nconst createCategoryBooks = async (event) => {\n    // && li \n    if (event.target.nodeName !== 'BUTTON') {\n        return;\n    }\n    startLoading();\n    const category = event.target.dataset.category;\n    try {\n        const categoryList = await getBooksOfCertainCategory(category);\n        renderCategoryTitle(category);\n        refs.booksHandler.innerHTML = `<ul class=\"books__list\">${renderBookCard(categoryList)}</ul>`;\n        scrollToTop();\n    } catch (e) {\n        refs.booksHandler.innerHTML = renderError(`Something went wrong...`);\n    }\n    removeLoading();\n}\n\nrefs.booksHandler.addEventListener(\"click\", createCategoryBooks)"],"names":["parcelRequire","register","JSON","parse","$9EY00","refs","burger","addEventListener","mobileMenu","classList","contains","remove","burgerCloseIcon","add","burgerMenuIcon","document","body","window","matchMedia","e","matches","$bpxeT","$9270db3bbfa637e6$var$renderAllCategories","data","map","param","list_name","concat","join","$9270db3bbfa637e6$var$_createAllCategories","$parcel$interopDefault","$2TvXO","mark","_callee","allCategories","$laqZe","getCategoryList","_ctx","sent","allCategoriesList","insertAdjacentHTML","console","log","t0","apply","this","arguments","$a72193d3d9951866$exports","getBundleURL","resolve","$075e015418971766$export$7ad7812518320979","sample","URL","_id","book_image","title","author","$95d088b2c1cded33$export$c2a58a501338b2e1","arrayOfWords","split","lastWord","length","allExceptLastWord","slice","categoryTitle","innerHTML","$b9d02116228d5733$var$createTopBooks","books","$bi3nC","startLoading","getTopBooks","booksHandler","$3sQwF","renderError","removeLoading","$88f15ab57abe0359$export$f5d3771428a1f489","scroll","top","behavior","IntersectionObserver","entries","forEach","entry","isIntersecting","scrollTopBtn","observe","scrollTopTarget","$63a674f9d7c798a1$var$createCategoryBooks","event","category","categoryList","target","nodeName","dataset","getBooksOfCertainCategory"],"version":3,"file":"index.b8063553.js.map"}