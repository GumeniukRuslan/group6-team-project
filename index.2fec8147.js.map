{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-d14fe7b9aa493473.js","src/index.js","src/js/render/renderAllCategories.js","src/js/topBooks.js","node_modules/@parcel/runtime-js/lib/runtime-aa3a2ea5ec1a6e9a.js","src/js/render/renderBookCard.js","src/js/render/renderCategoryTitle.js","src/js/render/renderTopCategories.js","src/js/scrollToTop.js","src/js/categoryBooks.js","src/js/switch.js","src/js/createModal.js","src/js/components/toggleModal.js","node_modules/@parcel/runtime-js/lib/runtime-b72456753751e934.js","node_modules/@parcel/runtime-js/lib/runtime-115f991ac4da8c7a.js","node_modules/@parcel/runtime-js/lib/runtime-abddd7cb01b925d4.js","src/js/render/renderModal.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"5ZPII\\\":\\\"index.2fec8147.js\\\",\\\"kx99P\\\":\\\"sample.eaf37d8e.png\\\",\\\"1yVwl\\\":\\\"amazon.8e8667c1.png\\\",\\\"4tfg6\\\":\\\"book1.8d01f172.png\\\",\\\"cv7CL\\\":\\\"book2.b226e49c.png\\\",\\\"4l2W5\\\":\\\"index.dd01f6c8.js\\\"}\"));","import './js/components/refs';\nimport './js/mobileMenu';\nimport './js/firebase';\nimport './js/render/renderAllCategories';\nimport './js/createSupportList';\nimport './js/topBooks';\nimport './js/scrollToTop';\nimport './js/components/support-funds';\nimport './js/categoryBooks';\nimport './js/switch';\nimport './js/createModal';\nimport './js/render/renderModal';\nimport './js/components/toggleModal';\n","import { getCategoryList } from '../api/fetchLogic';\nimport { refs } from '../components/refs';\n\nconst renderAllCategories = data => {\n  const categories = data\n    .map(({ list_name }) => {\n      return `<li class=\"categories__item\">${list_name}</li>`;\n    })\n    .join('');\n  return categories;\n};\n\nasync function createAllCategories() {\n  try {\n    const allCategories = await getCategoryList();\n    refs.allCategoriesList.insertAdjacentHTML(\n      'beforeend',\n      renderAllCategories(allCategories)\n    );\n  } catch (error) {\n    console.log(error);\n  }\n}\nwindow.addEventListener('load', createAllCategories);\n\n// import { getCategoryList } from '../api/fetchLogic';\n// import { refs } from '../components/refs';\n\n// function renderAllCategories(data) {}\n\n// async function createAllCategories() {\n//   try {\n//     const allCategories = '';\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n\n// во-первых тебе не нужна переменная с массивом объектов, ты получаешь его через функцию которую я тебе импортировал вверху, это ассинхронная функция\n// во-вторых вот это const ul = document.querySelector('.allCategories__list'); должно быть в файле refs который тоже надо импортировать, уже сделал,\n//обращаешься к этому списку череpз refs.allCategoriesList\n//вверху функция названная renderAllCategories в ней тебе просто надо написать логику как например в файле renderBookCard\n//после в функции createAllCategories в allCategories ты должен записать вызов функции getCategoryList со словом await\n//и после вставить с помощью метода insertAdjacentHTML резульатат\n// ну и потом надо решаить как фунцию вызвать, покликай по примерам в других файлах, вообще эти две функции можно было бы разюбить на два файла но тут уж сам глянь\n","import { getTopBooks } from \"./api/fetchLogic\";\nimport { refs } from \"./components/refs\";\nimport { renderTopCategories} from \"./render/renderTopCategories\";\nimport { renderCategoryTitle } from \"./render/renderCategoryTitle\";\nimport { removeLoading, startLoading } from \"./helpers/spinner\";\nimport { renderError } from \"./render/renderError\";\n\nconst createTopBooks = async () => {\n    startLoading();\n    renderCategoryTitle(`Best sellers books`);\n    try {\n        const books = await getTopBooks();\n        refs.booksHandler.innerHTML = renderTopCategories(books);\n    } catch (e) {\n        refs.booksHandler.innerHTML = renderError(`Something went wrong...`);\n    }\n    removeLoading();\n}\n\nif (refs.booksHandler) {\n    window.addEventListener(\"load\", createTopBooks);\n}","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"kx99P\")).toString();","import sample from '../../images/sample.png';\n\nexport const renderBookCard = data => {\n  const books = data\n    .map(({ _id, book_image, title, author }) => {\n      return `<li class=\"card\" data-book=\"${_id}\">\n        <div class=\"card__thumb\">\n            <img src=\"${\n              book_image ? book_image : sample\n            }\" loading=\"lazy\" alt=\"${title}\" class=\"card__img\">\n            <div class=\"card__text\">\n                <p class=\"card__text-inner\">quick view</p>\n            </div>\n        </div>\n        <h3 class=\"card__title\">${title}</h3>\n        <h4 class=\"card__author\">${author}</h4>\n    </li>`;\n    })\n    .join('');\n  return books;\n};\n","import { refs } from \"../components/refs\";\n\nexport const renderCategoryTitle = (title) => {\n    const arrayOfWords = title.split(\" \");\n    const lastWord = arrayOfWords[arrayOfWords.length - 1];\n    const allExceptLastWord = arrayOfWords.slice(0, -1).join(\" \");\n\n    refs.categoryTitle.innerHTML = `${allExceptLastWord} <span class=\"books__title-last\">${lastWord}</span>`;\n}","import { renderBookCard } from \"./renderBookCard\";\n\nexport const renderTopCategories = (data) => {\n    const categories = data.map(({ list_name, books }) => {\n        return `<div class=\"category\" data-category=\"${list_name}\">\n        <h2 class=\"category__title\">${list_name}</h2>\n        <ul class=\"category__list\">\n            ${renderBookCard(books)}\n        </ul>\n        <button class=\"btn--violet category__btn\" data-category=\"${list_name}\">see more</button>\n        </div>`\n    }).join(\"\");\n    return categories;\n} ","import { refs } from \"./components/refs\";\n\nconst observeTop = (entries) => {\n    entries.forEach(entry => {\n        if (!entry.isIntersecting) {\n            refs.scrollTopBtn.classList.remove('hidden');\n        } else {\n            refs.scrollTopBtn.classList.add('hidden');\n        }\n    });\n} \n\nexport const scrollToTop = () => {\n    window.scroll({\n        top: 0,\n        behavior: 'smooth',\n    });\n}\n\nconst toTopObserver = new IntersectionObserver(observeTop);\n\ntoTopObserver.observe(refs.scrollTopTarget);\nrefs.scrollTopBtn.addEventListener(\"click\", scrollToTop)","import { refs } from './components/refs';\nimport { getBooksOfCertainCategory } from './api/fetchLogic';\nimport { removeLoading, startLoading } from './helpers/spinner';\nimport { renderError } from './render/renderError';\nimport { renderCategoryTitle } from './render/renderCategoryTitle';\nimport { renderBookCard } from './render/renderBookCard';\nimport { scrollToTop } from './scrollToTop';\nimport { addToShopList } from './firebase';\nimport { rmvFrmShopList } from './firebase';\n\nconst createCategoryBooks = async event => {\n  // && li\n\n  if (event.target.classList.contains('card__img')) {\n    addToShopList(event);\n  }\n  if (event.target.classList.contains('card__title')) {\n    rmvFrmShopList(event);\n  }\n  if (event.target.nodeName !== 'BUTTON') {\n    return;\n  }\n\n  startLoading();\n  const category = event.target.dataset.category;\n  try {\n    const categoryList = await getBooksOfCertainCategory(category);\n    renderCategoryTitle(category);\n    refs.booksHandler.innerHTML = `<ul class=\"books__list\">${renderBookCard(\n      categoryList\n    )}</ul>`;\n    scrollToTop();\n  } catch (e) {\n    refs.booksHandler.innerHTML = renderError(`Something went wrong...`);\n  }\n  removeLoading();\n};\n\nrefs.booksHandler.addEventListener('click', createCategoryBooks);\n","let checkbox = document.querySelector('input[name=theme_switch]');\n\nif (window.matchMedia('(prefers-color-scheme: dark)').matches) {\n  document.documentElement.setAttribute('data-theme', 'dark');\n  checkbox.checked = true;\n} else {\n  document.documentElement.setAttribute('data-theme', 'light');\n  checkbox.checked = false;\n}\n\n// switch theme if checkbox is engaged\ncheckbox.addEventListener('change', cb => {\n  document.documentElement.setAttribute(\n    'data-theme',\n    cb.target.checked ? 'dark' : 'light'\n  );\n});\n\nif (window.matchMedia('(prefers-color-scheme: dark)').matches) {\n  document.documentElement.setAttribute('data-theme', 'dark');\n  checkbox.checked = true;\n} else {\n  document.documentElement.setAttribute('data-theme', 'light');\n  checkbox.checked = false;\n}\n\n// switch theme if checkbox is engaged\ncheckbox.addEventListener('change', cb => {\n  const selectedTheme = cb.target.checked ? 'dark' : 'light';\n  document.documentElement.setAttribute('data-theme', selectedTheme);\n  localStorage.setItem('theme', selectedTheme);\n});\n\n// проверяем сохраненную тему и устанавливаем ее при загрузке страницы\nconst savedTheme = localStorage.getItem('theme');\nif (savedTheme) {\n  document.documentElement.setAttribute('data-theme', savedTheme);\n  checkbox.checked = savedTheme === 'dark';\n}\n","import { refs } from './components/refs';\nimport { toggleModal } from './components/toggleModal';\nimport { getOneBookById } from './api/fetchLogic';\nimport { renderModal } from './render/renderModal';\nimport { removeLoading, startLoading } from './helpers/spinner';\nimport { renderError } from './render/renderError';\n\nconst createModal = async evt => {\n  toggleModal();\n  refs.backdrop.innerHTML = '';\n  startLoading();\n  const bookId = evt.target.dataset.book;\n\n  try {\n    const dataBook = await getOneBookById(bookId);\n    refs.backdrop.innerHTML = renderModal(dataBook);\n  } catch (e) {\n    refs.backdrop.innerHTML = renderError(\n      `This page is empty, add some books and proceed to order.`\n    );\n  }\n  removeLoading();\n};\n\nrefs.bookCard.addEventListener('click', createModal);\n","import { refs } from './refs';\n\nrefs.bookCard.addEventListener('click', toggleModal);\nrefs.closeModal.addEventListener('click', toggleModal);\n\nexport function toggleModal() {\n  refs.modalWindow.classList.toggle('is-hidden');\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"1yVwl\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"4tfg6\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"cv7CL\")).toString();","export const renderModal = data => {\n    const sample = new URL('../../images/sample.png', import.meta.url);\n    const amazon = new URL('../../images/amazon.png', import.meta.url);\n    const book1 = new URL('../../images/book1.png', import.meta.url);\n    const book2 = new URL('../../images/book2.png', import.meta.url);\n  \n      const book = (({ _id, book_image, title, author, description, amazon_product_url, }) => {\n      return `<div class=\"modal\">\n        <button class=\"modal__btn-close\" type=\"button\" data-modal-close>\n          <svg class=\"end\" width=\"12\" height=\"12\">\n            <use href=\"./images/icons.svg#icon-close\"></use>\n          </svg>\n        </button>\n        <div class=\"modal-card__thumb\" data-book=\"${_id}>\n        <img src=\"${book_image ? book_image : sample}\" loading=\"lazy\" alt=\"${title}\" class=\"card__img\">\n        <h2 class=\"modal-card__title\">${title}</h2>\n        <p class=\"modal-card__author\">${author}</p>\n        <div class=\"modal-card__descriprion\">${description}</div>\n        <ul class=\"modal-card__links-shop\">\n          <li><a class=\"modal-card__link\" href=\"${amazon_product_url}\"><img class=\"amazon-img\" src=\"src=\"${amazon}\" alt=\"amazon\"></a></li>\n          <li><a class=\"modal-card__link\" href=\"${amazon_product_url}\"><img class=\"book1_img\" src=\"${book1}\" alt=\"book1\"></a></li>\n          <li><a class=\"modal-card__link\" href=\"${amazon_product_url}\"><img class=\"book2_img\" src=\"${book2}\" alt=\"book2\"></a></li>\n        </ul>\n        <div class=\"add_to_list\">\n          <button class=\"btn-add-list\" type=\"button\">add to shopping list</button>\n        </div>\n        <div class=\"remove_from_list\">\n        <button class=\"btn-remove-list\" type=\"button\">remove from the shopping list</button>\n        <div class=\"modal-notification\">\n          Congratulations! You have added the book to the shopping list. To delete, press the button “Remove from the shopping list”.\n        </div>\n      </div>\n    </div>\n</div>`\n    }).join(\"\");\n    return book;\n}\n"],"names":["parcelRequire","register","JSON","parse","$2e5nt","window","addEventListener","async","allCategories","getCategoryList","$fAODQ","refs","allCategoriesList","insertAdjacentHTML","map","list_name","join","error","console","log","$62afbf5ea11da203$exports","URL","resolve","import","meta","url","toString","$a47ea20d57e5ad83$export$7ad7812518320979","data","_id","book_image","title","author","$parcel$interopDefault","$c8907729a4678d7b$export$c2a58a501338b2e1","arrayOfWords","split","lastWord","length","allExceptLastWord","slice","categoryTitle","innerHTML","booksHandler","$43IiB","startLoading","books","getTopBooks","e","$dbSHG","renderError","removeLoading","$c615a1561526cb3b$export$f5d3771428a1f489","scroll","top","behavior","IntersectionObserver","entries","forEach","entry","isIntersecting","scrollTopBtn","classList","add","remove","observe","scrollTopTarget","event","target","contains","$2ix2C","addToShopList","rmvFrmShopList","nodeName","category","dataset","categoryList","getBooksOfCertainCategory","$387241cbece9a9e6$var$checkbox","document","querySelector","matchMedia","matches","documentElement","setAttribute","checked","cb","selectedTheme","localStorage","setItem","$387241cbece9a9e6$var$savedTheme","getItem","$120531d09224271a$export$313c6d35f75fc0e","modalWindow","toggle","bookCard","closeModal","$41f4bfe0f5168ce2$exports","$ad4e862137e2a2d7$exports","$532cf66844964a16$exports","$b7ffd3fb80759c1c$export$69bf191433722f78","sample","amazon","book1","book2","description","amazon_product_url","evt","backdrop","bookId","book","getOneBookById"],"version":3,"file":"index.2fec8147.js.map"}